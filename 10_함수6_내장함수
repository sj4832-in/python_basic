# 내장함수 확인
print(dir(__builtins__))
# ['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException', 'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning', 'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError', 'ConnectionRefusedError', 'ConnectionResetError', 'DeprecationWarning', 'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False', 'FileExistsError', 'FileNotFoundError', 'FloatingPointError', 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError', 'ImportWarning', 'IndentationError', 'IndexError', 'InterruptedError', 'IsADirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError', 'MemoryError', 'ModuleNotFoundError', 'NameError', 'None', 'NotADirectoryError', 'NotImplemented', 'NotImplementedError', 'OSError', 'OverflowError', 'PendingDeprecationWarning', 'PermissionError', 'ProcessLookupError', 'RecursionError', 'ReferenceError', 'ResourceWarning', 'RuntimeError', 'RuntimeWarning', 'StopAsyncIteration', 'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError', 'SystemExit', 'TabError', 'TimeoutError', 'True', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError', 'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning', 'ValueError', 'Warning', 'WindowsError', 'ZeroDivisionError', '__build_class__', '__debug__', '__doc__', '__import__', '__loader__', '__name__', '__package__', '__spec__', 'abs', 'all', 'any', 'ascii', 'bin', 'bool', 'breakpoint', 'bytearray', 'bytes', 'callable', 'chr', 'classmethod', 'compile', 'complex', 'copyright', 'credits', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit', 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass', 'iter', 'len', 'license', 'list', 'locals', 'map', 'max', 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'quit', 'range', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars', 'zip']

# 내장 함수
print(sum([3, 5, 7]))                # iterable data들의 합 반환
print(sum({3, 5, 7}))
print(sum((3, 5, 7)))

print(max([3, 5, 7]))
print(min([3, 5, 7]))
print(max({10:'aaa',4:'bbb',100:'ccc'})) #100
print(min({10:'aaa',4:'bbb',100:'ccc'})) #4

print()
print(bin(8))                       #정수를 이진수로 반환
print(int(1.7))                      #실수를 정수화
print(float(3))                      #정수를 실수화
print(str(5) + '오')                  #숫자를 문자화

a = 10
b = eval('a + 5')                   #수식문자열을 수식화
print('eval 수행 결과 : ', b)

print(round(1.2), round(1.6))         #반올림된 결과 반환

print()
import math            #import로 수학관련 모듈을 불러온다
print(math.ceil(1.2), math.ceil(1.6))    #근사치 중 큰 정수 반환
print(math.floor(1.2), math.floor(1.6))  #근사치 중 작은 수 반환


print()
b_list = [True, 1, False]
print(all(b_list))          #iterable data들 중 모두 참이면 참
print(any(b_list))         #하나라도 참이면 참

b_list2 = [1, 3, 2, 5, 7, 6]
re = all(a < 10 for a in b_list2)
print('모든 숫자가 10 미만이냐?', re)

re = any(a < 3 for a in b_list2)
print('숫자 중 3 미만이 있냐?', re)

# list의 zip:  각기 다른 개수로 되어있는 자료형일지라도 동일한 개수로 쌍을 지어 묶어준다
x = [10, 20, 30]
y = ['a', 'b']
for i in zip(x, y):
    print(i) # (10, 'a') (20, 'b')

import itertools
for x in itertools.zip_longest(x, y):
    print(x)  # (10, 'a') (20, 'b') (30, None)

for a,b in zip(x, y):
    print(a, b) # 10 a  20 b

#샘플
country = ['대한민국','스웨덴', '미국']
capital = ['서울','스톡홀름','워싱턴']
for coun, cap in zip(country, capital):
    print('국가명 : {}, 수도:{}'.format(coun, cap))
#help(zip)

# 랜덤값 얻기
import random
random.seed(1234)
n = random.random()
print(n)
n= random.randrange(1,7)
print(n)
abc = ['a', 'b', 'c', 'd', 'e']
random.shuffle(abc)
print(abc)
menu = '쫄면', '육계장', '비빔밥'
c = random.choice(menu)
print(c)



# built-in 함수 확인 방법
import builtins
print(dir(builtins))

m = [1,2,3,4,5,6]
print([x%2==0 for x in m])

######################################
# partial 함수:  인수 고정후 사용
from operator import mul
from functools import partial

print("1. 일반 형태: ",  mul(10 , 5))
print("2. 특정값(5) 고정 형태: ")
five =   partial(mul, 5)
print(five(6))
# 응용
print("1>>", [five(i) for i in range(1,11)])
print("2>>", list(map(five, range(1,11))))
