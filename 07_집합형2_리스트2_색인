
 # 리스트 슬라이싱 ==> 복사됨. 따라서 원본값 변경 안됨.

# 0.  해제할당
[a,b,c,d] = [10,20,30,[100,200]]
print(a,b,c,d)

# 1. 1차원 배열
arr = [1,2,3,4,5,6,7,8,9,10]
print("original: ", arr)  # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print("all: ", arr[:])    # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
n = -1
print("reverse: ", arr[::n])  # [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
print("1 부터 끝까지: ", arr[1:])  # [2, 3, 4, 5, 6, 7, 8, 9, 10]
print("0 부터 5까지: ", arr[:6])   # [1, 2, 3, 4, 5, 6]
print("2 부터 5까지: ", arr[2:6])  # [3, 4, 5, 6]
print("맨 마지막: ", arr[-1])     # 10
print("맨 마지막에서 두번째 : ", arr[-2])     # 9

# 슬라이싱은 copy 처리됨. 따라서 원본값은 변경 안됨.
xyz = arr[0:5]
xyz[0] = 100
print(arr, xyz) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] [100, 2, 3, 4, 5]

print()
# 2. 2차원 배열
arr = [[1,2,3,4,5],[10,20,30,40,50]]
print("original: ", arr)
print("all: ", arr[:])
print("arr[0]: ", arr[0]) # [1, 2, 3, 4, 5]
print("arr[1]: ", arr[1]) # [10, 20, 30, 40, 50]
print("arr[0][:3] ", arr[0][:3] ) # [1, 2, 3]


# 1과 10만 추출? ==> 일반 python 방법은?
import  numpy as np
xxx = np.array(arr)
print(xxx[:,0]) # [ 1 10]
